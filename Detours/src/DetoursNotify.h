#pragma once

//这个二进制代码是跨平台的，也能在驱动中使用的。
unsigned char hookFunX86[] =
{
	//_notify_caller_ms_asm:
	/*00000000:*/ 0x55,    //push        ebp
	/*00000001:*/ 0x8B, 0xEC,    //mov         ebp,esp
	/*00000003:*/ 0x60,    //pushad
	/*00000004:*/ 0x9C,    //pushfd
	/*00000005:*/ 0x83, 0xEC, 0x10,    //sub         esp,10h
	/*00000008:*/ 0xE8, 0x22, 0x00, 0x00, 0x00,    //call        0000002F:notify_caller_get_eip
	/*0000000D:*/ 0x50,    //push        eax
	/*0000000E:*/ 0x8B, 0xC5,    //mov         eax,ebp
	/*00000010:*/ 0x83, 0xC0, 0x04,    //add         eax,4
	/*00000013:*/ 0x50,    //push        eax
	/*00000014:*/ 0xB8, 0xAA, 0xAA, 0xAA, 0xAA,    //mov         eax,0AAAAAAAAh,这里会被填充成notify_caller_ms_x86的地址
	/*00000019:*/ 0xFF, 0xD0,    //call        eax
	/*0000001B:*/ 0x8F, 0x44, 0x24, 0x08,    //pop         dword ptr [esp+8]
	/*0000001F:*/ 0x8F, 0x44, 0x24, 0x04,    //pop         dword ptr [esp+4]
	/*00000023:*/ 0x85, 0xC0,    //test        eax,eax
	/*00000025:*/ 0x74, 0x14,    //je          0000003B:notify_caller_ms_asm_exit
	/*00000027:*/ 0x83, 0xC4, 0x10,    //add         esp,10h
	/*0000002A:*/ 0x9D,    //popfd
	/*0000002B:*/ 0x61,    //popad
	/*0000002C:*/ 0xC9,    //leave
	/*0000002D:*/ 0xEB, 0x06,    //jmp         00000035:notify_caller_jmp_target
	//notify_caller_get_eip
	/*0000002F:*/ 0x58,    //pop         eax
	/*00000030:*/ 0x50,    //push        eax
	/*00000031:*/ 0x83, 0xE8, 0x0D,    //sub         eax,0Dh
	/*00000034:*/ 0xC3,    //ret
	//notify_caller_jmp_target
	/*00000035:*/ 0xFF, 0x25, 0xDD, 0xDD, 0xDD, 0xDD,    //jmp         dword ptr ds:[DDDDDDDDh]，这里会被填充成Trampoline的地址
	//notify_caller_ms_asm_exit
	/*0000003B:*/ 0x83, 0xC4, 0x10,    //add         esp,10h
	/*0000003E:*/ 0x9D,    //popfd
	/*0000003F:*/ 0x61,    //popad
	/*00000040:*/ 0xC9,    //leave
	/*00000041:*/ 0xC2, 0x00, 0x00,    //ret         4; 这里将汇编的04改成了0xC2, 0x04, 0x00 ->0xC2, 0x00, 0x00
	//_get_notify_caller_ms_asm_size:
	///*00000044:*/ 0x55,    //push        ebp
	///*00000045:*/ 0x8B, 0xEC,    //mov         ebp,esp
	///*00000047:*/ 0xB8, 0x00, 0x00, 0x00, 0x00,    //mov         eax,0
	///*0000004C:*/ 0xC9,    //leave
	///*0000004D:*/ 0xC3,    //ret
};

unsigned char hookFunX64[] =
{
	//notify_caller_ms_asm:
	/*0000000000000000:*/ 0x55,    //push        rbp
	/*0000000000000001:*/ 0x48, 0x8B, 0xEC,    //mov         rbp,rsp
	/*0000000000000004:*/ 0x54,    //push        rsp
	/*0000000000000005:*/ 0x50,    //push        rax
	/*0000000000000006:*/ 0x51,    //push        rcx
	/*0000000000000007:*/ 0x52,    //push        rdx
	/*0000000000000008:*/ 0x53,    //push        rbx
	/*0000000000000009:*/ 0x55,    //push        rbp
	/*000000000000000A:*/ 0x56,    //push        rsi
	/*000000000000000B:*/ 0x57,    //push        rdi
	/*000000000000000C:*/ 0x41, 0x50,    //push        r8
	/*000000000000000E:*/ 0x41, 0x51,    //push        r9
	/*0000000000000010:*/ 0x41, 0x52,    //push        r10
	/*0000000000000012:*/ 0x41, 0x53,    //push        r11
	/*0000000000000014:*/ 0x41, 0x54,    //push        r12
	/*0000000000000016:*/ 0x41, 0x55,    //push        r13
	/*0000000000000018:*/ 0x41, 0x56,    //push        r14
	/*000000000000001A:*/ 0x41, 0x57,    //push        r15
	/*000000000000001C:*/ 0x9C,    //pushfq
	/*000000000000001D:*/ 0x48, 0x81, 0xEC, 0x00, 0x01, 0x00, 0x00,    //sub         rsp,100h
	/*0000000000000024:*/ 0xF3, 0x0F, 0x7F, 0x84, 0x24, 0xF0, 0x00, 0x00, 0x00,    //movdqu      xmmword ptr [rsp+00000000000000F0h],xmm0
	/*000000000000002D:*/ 0xF3, 0x0F, 0x7F, 0x8C, 0x24, 0xE0, 0x00, 0x00, 0x00,    //movdqu      xmmword ptr [rsp+00000000000000E0h],xmm1
	/*0000000000000036:*/ 0xF3, 0x0F, 0x7F, 0x94, 0x24, 0xD0, 0x00, 0x00, 0x00,    //movdqu      xmmword ptr [rsp+00000000000000D0h],xmm2
	/*000000000000003F:*/ 0xF3, 0x0F, 0x7F, 0x9C, 0x24, 0xC0, 0x00, 0x00, 0x00,    //movdqu      xmmword ptr [rsp+00000000000000C0h],xmm3
	/*0000000000000048:*/ 0xF3, 0x0F, 0x7F, 0xA4, 0x24, 0xB0, 0x00, 0x00, 0x00,    //movdqu      xmmword ptr [rsp+00000000000000B0h],xmm4
	/*0000000000000051:*/ 0xF3, 0x0F, 0x7F, 0xAC, 0x24, 0xA0, 0x00, 0x00, 0x00,    //movdqu      xmmword ptr [rsp+00000000000000A0h],xmm5
	/*000000000000005A:*/ 0xF3, 0x0F, 0x7F, 0xB4, 0x24, 0x90, 0x00, 0x00, 0x00,    //movdqu      xmmword ptr [rsp+0000000000000090h],xmm6
	/*0000000000000063:*/ 0xF3, 0x0F, 0x7F, 0xBC, 0x24, 0x80, 0x00, 0x00, 0x00,    //movdqu      xmmword ptr [rsp+0000000000000080h],xmm7
	/*000000000000006C:*/ 0xF3, 0x44, 0x0F, 0x7F, 0x44, 0x24, 0x70,    //movdqu      xmmword ptr [rsp+70h],xmm8
	/*0000000000000073:*/ 0xF3, 0x44, 0x0F, 0x7F, 0x4C, 0x24, 0x60,    //movdqu      xmmword ptr [rsp+60h],xmm9
	/*000000000000007A:*/ 0xF3, 0x44, 0x0F, 0x7F, 0x54, 0x24, 0x50,    //movdqu      xmmword ptr [rsp+50h],xmm10
	/*0000000000000081:*/ 0xF3, 0x44, 0x0F, 0x7F, 0x5C, 0x24, 0x40,    //movdqu      xmmword ptr [rsp+40h],xmm11
	/*0000000000000088:*/ 0xF3, 0x44, 0x0F, 0x7F, 0x64, 0x24, 0x30,    //movdqu      xmmword ptr [rsp+30h],xmm12
	/*000000000000008F:*/ 0xF3, 0x44, 0x0F, 0x7F, 0x6C, 0x24, 0x20,    //movdqu      xmmword ptr [rsp+20h],xmm13
	/*0000000000000096:*/ 0xF3, 0x44, 0x0F, 0x7F, 0x74, 0x24, 0x10,    //movdqu      xmmword ptr [rsp+10h],xmm14
	/*000000000000009D:*/ 0xF3, 0x44, 0x0F, 0x7F, 0x3C, 0x24,    //movdqu      xmmword ptr [rsp],xmm15
	/*00000000000000A3:*/ 0x54,    //push        rsp
	/*00000000000000A4:*/ 0x48, 0x83, 0xE4, 0xF0,    //and         rsp,0FFFFFFFFFFFFFFF0h
	/*00000000000000A8:*/ 0x48, 0x83, 0xEC, 0x50,    //sub         rsp,50h
	/*00000000000000AC:*/ 0xE8, 0xDE, 0x00, 0x00, 0x00,    //call        000000000000018F：notify_caller_get_rip
	/*00000000000000B1:*/ 0x48, 0x89, 0x44, 0x24, 0x40,    //mov         qword ptr [rsp+40h],rax
	/*00000000000000B6:*/ 0x48, 0x8B, 0xC5,    //mov         rax,rbp
	/*00000000000000B9:*/ 0x48, 0x83, 0xC0, 0x08,    //add         rax,8
#ifdef _WIN32
	/*00000000000000BD:*/ 0x48, 0x89, 0x44, 0x24, 0x20,    //mov         qword ptr [rsp+20h],rax
#else
	/*00000000000000BD:*/ 0x48, 0x89, 0x44, 0x24, 0x00,    //mov         qword ptr [rsp+0h],rax
#endif
	/*00000000000000C2:*/ 0x48, 0x8B, 0x44, 0x24, 0x40,    //mov         rax,qword ptr [rsp+40h]

#ifdef _WIN32
	/*00000000000000C7:*/ 0x48, 0x89, 0x44, 0x24, 0x28,    //mov         qword ptr [rsp+28h],rax
#else
	/*00000000000000C7:*/ 0x48, 0x89, 0x44, 0x24, 0x08,    //mov         qword ptr [rsp+08h],rax
#endif
	/*00000000000000CC:*/ 0x48, 0xB8, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA,    //mov         rax,0AAAAAAAAAAAAAAAAh，会被填充成notify_caller_ms_x64函数地址
	/*00000000000000D6:*/ 0xFF, 0xD0,    //call        rax
	/*00000000000000D8:*/ 0x48, 0x85, 0xC0,    //test        rax,rax
	/*00000000000000DB:*/ 0x0F, 0x84, 0xC5, 0x00, 0x00, 0x00,    //je          00000000000001A6:notify_caller_ms_asm_exit
	/*00000000000000E1:*/ 0x48, 0x83, 0xC4, 0x50,    //add         rsp,50h
	/*00000000000000E5:*/ 0x48, 0x8B, 0xA5, 0x70, 0xFE, 0xFF, 0xFF,    //mov         rsp,qword ptr [rbp+FFFFFFFFFFFFFE70h]
	/*00000000000000EC:*/ 0x48, 0x81, 0xC4, 0x00, 0x01, 0x00, 0x00,    //add         rsp,100h
	/*00000000000000F3:*/ 0xF3, 0x44, 0x0F, 0x6F, 0xBC, 0x24, 0x00, 0xFF, 0xFF, 0xFF,    //movdqu      xmm15,xmmword ptr [rsp+FFFFFFFFFFFFFF00h]
	/*00000000000000FD:*/ 0xF3, 0x44, 0x0F, 0x6F, 0xB4, 0x24, 0x10, 0xFF, 0xFF, 0xFF,    //movdqu      xmm14,xmmword ptr [rsp+FFFFFFFFFFFFFF10h]
	/*0000000000000107:*/ 0xF3, 0x44, 0x0F, 0x6F, 0xAC, 0x24, 0x20, 0xFF, 0xFF, 0xFF,    //movdqu      xmm13,xmmword ptr [rsp+FFFFFFFFFFFFFF20h]
	/*0000000000000111:*/ 0xF3, 0x44, 0x0F, 0x6F, 0xA4, 0x24, 0x30, 0xFF, 0xFF, 0xFF,    //movdqu      xmm12,xmmword ptr [rsp+FFFFFFFFFFFFFF30h]
	/*000000000000011B:*/ 0xF3, 0x44, 0x0F, 0x6F, 0x9C, 0x24, 0x40, 0xFF, 0xFF, 0xFF,    //movdqu      xmm11,xmmword ptr [rsp+FFFFFFFFFFFFFF40h]
	/*0000000000000125:*/ 0xF3, 0x44, 0x0F, 0x6F, 0x94, 0x24, 0x50, 0xFF, 0xFF, 0xFF,    //movdqu      xmm10,xmmword ptr [rsp+FFFFFFFFFFFFFF50h]
	/*000000000000012F:*/ 0xF3, 0x44, 0x0F, 0x6F, 0x8C, 0x24, 0x60, 0xFF, 0xFF, 0xFF,    //movdqu      xmm9,xmmword ptr [rsp+FFFFFFFFFFFFFF60h]
	/*0000000000000139:*/ 0xF3, 0x44, 0x0F, 0x6F, 0x84, 0x24, 0x70, 0xFF, 0xFF, 0xFF,    //movdqu      xmm8,xmmword ptr [rsp+FFFFFFFFFFFFFF70h]
	/*0000000000000143:*/ 0xF3, 0x0F, 0x6F, 0x7C, 0x24, 0x80,    //movdqu      xmm7,xmmword ptr [rsp-80h]
	/*0000000000000149:*/ 0xF3, 0x0F, 0x6F, 0x74, 0x24, 0x90,    //movdqu      xmm6,xmmword ptr [rsp-70h]
	/*000000000000014F:*/ 0xF3, 0x0F, 0x6F, 0x6C, 0x24, 0xA0,    //movdqu      xmm5,xmmword ptr [rsp-60h]
	/*0000000000000155:*/ 0xF3, 0x0F, 0x6F, 0x64, 0x24, 0xB0,    //movdqu      xmm4,xmmword ptr [rsp-50h]
	/*000000000000015B:*/ 0xF3, 0x0F, 0x6F, 0x5C, 0x24, 0xC0,    //movdqu      xmm3,xmmword ptr [rsp-40h]
	/*0000000000000161:*/ 0xF3, 0x0F, 0x6F, 0x54, 0x24, 0xD0,    //movdqu      xmm2,xmmword ptr [rsp-30h]
	/*0000000000000167:*/ 0xF3, 0x0F, 0x6F, 0x4C, 0x24, 0xE0,    //movdqu      xmm1,xmmword ptr [rsp-20h]
	/*000000000000016D:*/ 0xF3, 0x0F, 0x6F, 0x44, 0x24, 0xF0,    //movdqu      xmm0,xmmword ptr [rsp-10h]
	/*0000000000000173:*/ 0x9D,    //popfq
	/*0000000000000174:*/ 0x41, 0x5F,    //pop         r15
	/*0000000000000176:*/ 0x41, 0x5E,    //pop         r14
	/*0000000000000178:*/ 0x41, 0x5D,    //pop         r13
	/*000000000000017A:*/ 0x41, 0x5C,    //pop         r12
	/*000000000000017C:*/ 0x41, 0x5B,    //pop         r11
	/*000000000000017E:*/ 0x41, 0x5A,    //pop         r10
	/*0000000000000180:*/ 0x41, 0x59,    //pop         r9
	/*0000000000000182:*/ 0x41, 0x58,    //pop         r8
	/*0000000000000184:*/ 0x5F,    //pop         rdi
	/*0000000000000185:*/ 0x5E,    //pop         rsi
	/*0000000000000186:*/ 0x5D,    //pop         rbp
	/*0000000000000187:*/ 0x5B,    //pop         rbx
	/*0000000000000188:*/ 0x5A,    //pop         rdx
	/*0000000000000189:*/ 0x59,    //pop         rcx
	/*000000000000018A:*/ 0x58,    //pop         rax
	/*000000000000018B:*/ 0x5C,    //pop         rsp
	/*000000000000018C:*/ 0xC9,    //leave
	/*000000000000018D:*/ 0xEB, 0x09,    //jmp         0000000000000198:notify_caller_jmp_target
	//notify_caller_get_rip
	/*000000000000018F:*/ 0x58,    //pop         rax
	/*0000000000000190:*/ 0x50,    //push        rax
	/*0000000000000191:*/ 0x48, 0x2D, 0xB1, 0x00, 0x00, 0x00,    //sub         rax,0B1h
	/*0000000000000197:*/ 0xC3,    //ret
	//notify_caller_jmp_target
	/*0000000000000198:*/ 0xFF, 0x25, 0x00, 0x00, 0x00, 0x00,    //jmp         qword ptr [000000000000019Eh]
	/*000000000000019E:*/ 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD, 0xDD,   //0DDDDDDDDDDDDDDDDh ，这里会被填充成Trampoline的地址   

	//notify_caller_ms_asm_exit
	/*00000000000001A6:*/ 0x48, 0x83, 0xC4, 0x50,    //add         rsp,50h
	/*00000000000001AA:*/ 0x48, 0x8B, 0xA5, 0x70, 0xFE, 0xFF, 0xFF,    //mov         rsp,qword ptr [rbp+FFFFFFFFFFFFFE70h]
	/*00000000000001B1:*/ 0x48, 0x81, 0xC4, 0x00, 0x01, 0x00, 0x00,    //add         rsp,100h
	/*00000000000001B8:*/ 0xF3, 0x44, 0x0F, 0x6F, 0xBC, 0x24, 0x00, 0xFF, 0xFF, 0xFF,    //movdqu      xmm15,xmmword ptr [rsp+FFFFFFFFFFFFFF00h]
	/*00000000000001C2:*/ 0xF3, 0x44, 0x0F, 0x6F, 0xB4, 0x24, 0x10, 0xFF, 0xFF, 0xFF,    //movdqu      xmm14,xmmword ptr [rsp+FFFFFFFFFFFFFF10h]
	/*00000000000001CC:*/ 0xF3, 0x44, 0x0F, 0x6F, 0xAC, 0x24, 0x20, 0xFF, 0xFF, 0xFF,    //movdqu      xmm13,xmmword ptr [rsp+FFFFFFFFFFFFFF20h]
	/*00000000000001D6:*/ 0xF3, 0x44, 0x0F, 0x6F, 0xA4, 0x24, 0x30, 0xFF, 0xFF, 0xFF,    //movdqu      xmm12,xmmword ptr [rsp+FFFFFFFFFFFFFF30h]
	/*00000000000001E0:*/ 0xF3, 0x44, 0x0F, 0x6F, 0x9C, 0x24, 0x40, 0xFF, 0xFF, 0xFF,    //movdqu      xmm11,xmmword ptr [rsp+FFFFFFFFFFFFFF40h]
	/*00000000000001EA:*/ 0xF3, 0x44, 0x0F, 0x6F, 0x94, 0x24, 0x50, 0xFF, 0xFF, 0xFF,    //movdqu      xmm10,xmmword ptr [rsp+FFFFFFFFFFFFFF50h]
	/*00000000000001F4:*/ 0xF3, 0x44, 0x0F, 0x6F, 0x8C, 0x24, 0x60, 0xFF, 0xFF, 0xFF,    //movdqu      xmm9,xmmword ptr [rsp+FFFFFFFFFFFFFF60h]
	/*00000000000001FE:*/ 0xF3, 0x44, 0x0F, 0x6F, 0x84, 0x24, 0x70, 0xFF, 0xFF, 0xFF,    //movdqu      xmm8,xmmword ptr [rsp+FFFFFFFFFFFFFF70h]
	/*0000000000000208:*/ 0xF3, 0x0F, 0x6F, 0x7C, 0x24, 0x80,    //movdqu      xmm7,xmmword ptr [rsp-80h]
	/*000000000000020E:*/ 0xF3, 0x0F, 0x6F, 0x74, 0x24, 0x90,    //movdqu      xmm6,xmmword ptr [rsp-70h]
	/*0000000000000214:*/ 0xF3, 0x0F, 0x6F, 0x6C, 0x24, 0xA0,    //movdqu      xmm5,xmmword ptr [rsp-60h]
	/*000000000000021A:*/ 0xF3, 0x0F, 0x6F, 0x64, 0x24, 0xB0,    //movdqu      xmm4,xmmword ptr [rsp-50h]
	/*0000000000000220:*/ 0xF3, 0x0F, 0x6F, 0x5C, 0x24, 0xC0,    //movdqu      xmm3,xmmword ptr [rsp-40h]
	/*0000000000000226:*/ 0xF3, 0x0F, 0x6F, 0x54, 0x24, 0xD0,    //movdqu      xmm2,xmmword ptr [rsp-30h]
	/*000000000000022C:*/ 0xF3, 0x0F, 0x6F, 0x4C, 0x24, 0xE0,    //movdqu      xmm1,xmmword ptr [rsp-20h]
	/*0000000000000232:*/ 0xF3, 0x0F, 0x6F, 0x44, 0x24, 0xF0,    //movdqu      xmm0,xmmword ptr [rsp-10h]
	/*0000000000000238:*/ 0x9D,    //popfq
	/*0000000000000239:*/ 0x41, 0x5F,    //pop         r15
	/*000000000000023B:*/ 0x41, 0x5E,    //pop         r14
	/*000000000000023D:*/ 0x41, 0x5D,    //pop         r13
	/*000000000000023F:*/ 0x41, 0x5C,    //pop         r12
	/*0000000000000241:*/ 0x41, 0x5B,    //pop         r11
	/*0000000000000243:*/ 0x41, 0x5A,    //pop         r10
	/*0000000000000245:*/ 0x41, 0x59,    //pop         r9
	/*0000000000000247:*/ 0x41, 0x58,    //pop         r8
	/*0000000000000249:*/ 0x5F,    //pop         rdi
	/*000000000000024A:*/ 0x5E,    //pop         rsi
	/*000000000000024B:*/ 0x5D,    //pop         rbp
	/*000000000000024C:*/ 0x5B,    //pop         rbx
	/*000000000000024D:*/ 0x5A,    //pop         rdx
	/*000000000000024E:*/ 0x59,    //pop         rcx
	/*000000000000024F:*/ 0x58,    //pop         rax
	/*0000000000000250:*/ 0x5C,    //pop         rsp
	/*0000000000000251:*/ 0xC9,    //leave
	/*0000000000000252:*/ 0xC2, 0x00, 0x00,    //ret         4;这里将汇编的04改成了0xC2, 0x04, 0x00 ->0xC2, 0x00, 0x00
  //get_notify_caller_ms_asm_size:
  ///*0000000000000255:*/ 0x48, 0xC7, 0xC0, 0x00, 0x00, 0x00, 0x00,    //mov         rax,0
  ///*000000000000025C:*/ 0xC3,    //ret


};

unsigned char hookFunARM[] =
{
	//notify_caller_ms_asm:
	/*00000000:*/ 0x01,  0xB4,    //push        {r0}
	/*00000002:*/ 0x2D,  0xE9, 0xFF,  0x5F,    //push        {r0-r12,lr}
	/*00000006:*/ 0x2D,  0xED, 0x20,  0x0B,    //vpush       {d0-d15}
	/*0000000A:*/ 0x6D,  0xED, 0x20,  0x0B,    //vpush       {d16-d31}
	/*0000000E:*/ 0x84,  0xB0,    //sub         sp,sp,#0x10
	/*00000010:*/ 0x01,  0xB4,    //push        {r0}
	/*00000012:*/ 0xEF,  0xF3, 0x00,  0x80,    //mrs         r0,cpsr
	/*00000016:*/ 0x01,  0xB4,    //push        {r0}
	/*00000018:*/ 0x84,  0xB0,    //sub         sp,sp,#0x10
	/*0000001A:*/ 0x59,  0xA8,    //add         r0,sp,#0x164
	/*0000001C:*/ 0x00,  0x90,    //str         r0,[sp]
	/*0000001E:*/ 0x00,  0xF0, 0x13,  0xF8,    //bl          get_notify_caller_ms_asm_pc,注意这里不能直接扣obj的机器码，obj里面还是占位符
	/*00000022:*/ 0x01,  0x90,    //str         r0,[sp,#4]
	/*00000024:*/ 0x13,  0x48,    //ldr         r0,get_notify_caller_ms_asm_size ,会被填充成notify_caller_ms_arm64的地址
	/*00000026:*/ 0x80,  0x47,    //blx         r0
	/*00000028:*/ 0x00,  0x28,    //cmp         r0,#0
	/*0000002A:*/ 0x11,  0xD0,    //beq         get_notify_caller_ms_asm_exit
	/*0000002C:*/ 0x58,  0x90,    //str         r0,[sp,#0x160]
	/*0000002E:*/ 0x04,  0xB0,    //add         sp,sp,#0x10
	/*00000030:*/ 0x01,  0xBC,    //pop         {r0}
	/*00000032:*/ 0x80,  0xF3, 0x00,  0x89,    //msr         cpsr_fc,r0
	/*00000036:*/ 0x01,  0xBC,    //pop         {r0}
	/*00000038:*/ 0x04,  0xB0,    //add         sp,sp,#0x10
	/*0000003A:*/ 0xFD,  0xEC, 0x20,  0x0B,    //vpop        {d16-d31}
	/*0000003E:*/ 0xBD,  0xEC, 0x20,  0x0B,    //vpop        {d0-d15}
	/*00000042:*/ 0xBD,  0xE8, 0xFF,  0x5F,    //pop         {r0-r12,lr}
	/*00000046:*/ 0x00,  0xBD,    //pop         {pc}
	//get_notify_caller_ms_asm_pc:
	/*00000048:*/ 0x70,  0x46,    //mov         r0,lr
	/*0000004A:*/ 0xA0,  0xF1, 0x23,  0x00,    //sub         r0,r0,#0x23
	/*0000004E:*/ 0xF7,  0x46,    //mov         pc,lr
	//get_notify_caller_ms_asm_exit:
	/*00000050:*/ 0x04,  0xB0,    //add         sp,sp,#0x10
	/*00000052:*/ 0x01,  0xBC,    //pop         {r0}
	/*00000054:*/ 0x80,  0xF3, 0x00,  0x89,    //msr         cpsr_fc,r0
	/*00000058:*/ 0x01,  0xBC,    //pop         {r0}
	/*0000005A:*/ 0x04,  0xB0,    //add         sp,sp,#0x10
	/*0000005C:*/ 0xFD,  0xEC, 0x20,  0x0B,    //vpop        {d16-d31}
	/*00000060:*/ 0xBD,  0xEC, 0x20,  0x0B,    //vpop        {d0-d15}
	/*00000064:*/ 0xBD,  0xE8, 0xFF,  0x5F,    //pop         {r0-r12,lr}
	/*00000068:*/ 0x01,  0xB0,    //add         sp,sp,#4
	/*0000006A:*/ 0xF7,  0x46,    //mov         pc,lr
	/*0000006C:*/ 0x00,  0xBF,    //nop
	/*0000006E:*/ 0x00,  0xBF,    //nop
	/*00000070:*/ 0x00,  0xBF,    //nop
	/*00000072:*/ 0x00,  0xBF,    //nop

	//get_notify_caller_ms_asm_size:
	/*00000074:*/ 0xDD, 0xCC,0xBB,  0xAA,  //





};
unsigned char hookFunARM64[] =
{
 //notify_caller_ms_asm:
  /*0000000000000000:*/ 0xFF,  0x43,  0x00,  0xD1,    //sub         sp,sp,#0x10
  /*0000000000000004:*/ 0xE0,  0x03,  0x00,  0xF9,    //str         x0,[sp]
  /*0000000000000008:*/ 0xE0,  0x03,  0x00,  0x91,    //mov         x0,sp
  /*000000000000000C:*/ 0x00,  0x40,  0x00,  0x91,    //add         x0,x0,#0x10
  /*0000000000000010:*/ 0xE0,  0x07,  0x00,  0xF9,    //str         x0,[sp,#8]
  /*0000000000000014:*/ 0xFF,  0x03,  0x08,  0xD1,    //sub         sp,sp,#0x200
  /*0000000000000018:*/ 0xE1,  0x0B,  0x01,  0xA9,    //stp         x1,x2,[sp,#0x10]
  /*000000000000001C:*/ 0xE3,  0x13,  0x02,  0xA9,    //stp         x3,x4,[sp,#0x20]
  /*0000000000000020:*/ 0xE5,  0x1B,  0x03,  0xA9,    //stp         x5,x6,[sp,#0x30]
  /*0000000000000024:*/ 0xE7,  0x23,  0x04,  0xA9,    //stp         x7,x8,[sp,#0x40]
  /*0000000000000028:*/ 0xE9,  0x2B,  0x05,  0xA9,    //stp         x9,x10,[sp,#0x50]
  /*000000000000002C:*/ 0xEB,  0x33,  0x06,  0xA9,    //stp         x11,x12,[sp,#0x60]
  /*0000000000000030:*/ 0xED,  0x3B,  0x07,  0xA9,    //stp         x13,x14,[sp,#0x70]
  /*0000000000000034:*/ 0xEF,  0x43,  0x08,  0xA9,    //stp         x15,xip0,[sp,#0x80]
  /*0000000000000038:*/ 0xF1,  0x4B,  0x09,  0xA9,    //stp         xip1,xpr,[sp,#0x90]
  /*000000000000003C:*/ 0xF3,  0x53,  0x0A,  0xA9,    //stp         x19,x20,[sp,#0xA0]
  /*0000000000000040:*/ 0xF5,  0x5B,  0x0B,  0xA9,    //stp         x21,x22,[sp,#0xB0]
  /*0000000000000044:*/ 0xF7,  0x63,  0x0C,  0xA9,    //stp         x23,x24,[sp,#0xC0]
  /*0000000000000048:*/ 0xF9,  0x6B,  0x0D,  0xA9,    //stp         x25,x26,[sp,#0xD0]
  /*000000000000004C:*/ 0xFB,  0x73,  0x0E,  0xA9,    //stp         x27,x28,[sp,#0xE0]
  /*0000000000000050:*/ 0xFD,  0x7B,  0x0F,  0xA9,    //stp         fp,lr,[sp,#0xF0]
  /*0000000000000054:*/ 0xE0,  0x07,  0x08,  0xAD,    //stp         q0,q1,[sp,#0x100]
  /*0000000000000058:*/ 0xE2,  0x0F,  0x09,  0xAD,    //stp         q2,q3,[sp,#0x120]
  /*000000000000005C:*/ 0xE4,  0x17,  0x0A,  0xAD,    //stp         q4,q5,[sp,#0x140]
  /*0000000000000060:*/ 0xE6,  0x1F,  0x0B,  0xAD,    //stp         q6,q7,[sp,#0x160]
  /*0000000000000064:*/ 0xE0,  0x03,  0x00,  0xF9,    //str         x0,[sp]
  /*0000000000000068:*/ 0x24,  0x00,  0x00,  0x94,    //bl          get_notify_caller_ms_asm_pc,注意这里不能直接扣obj的机器码，obj里面还是占位符
  /*000000000000006C:*/ 0xE0,  0x07,  0x00,  0xF9,    //str         x0,[sp,#8]
  /*0000000000000070:*/ 0xFF,  0x83,  0x00,  0xD1,    //sub         sp,sp,#0x20
  /*0000000000000074:*/ 0xE0,  0x13,  0x40,  0xF9,    //ldr         x0,[sp,#0x20]   //构造第九个参数，原sp
  /*0000000000000078:*/ 0xE0,  0x03,  0x00,  0xF9,    //str         x0,[sp]
  /*000000000000007C:*/ 0xE0,  0x17,  0x40,  0xF9,    //ldr         x0,[sp,#0x28]  //构造第九10个参数，本函数地址
  /*0000000000000080:*/ 0xE0,  0x07,  0x00,  0xF9,    //str         x0,[sp,#8]
  /*0000000000000084:*/ 0xA8,  0x04,  0x00,  0x58,    //ldr         x8,0000000000000118   ldr x8, =0xbbbbbbbbaaaaaaaa,会被填充成notify_caller_ms_arm64的地址
  /*0000000000000088:*/ 0x00,  0x01,  0x3F,  0xD6,    //blr         x8
  /*000000000000008C:*/ 0xFF,  0x83,  0x00,  0x91,    //add         sp,sp,#0x20
  /*0000000000000090:*/ 0xE0,  0x07,  0x48,  0xAD,    //ldp         q0,q1,[sp,#0x100]
  /*0000000000000094:*/ 0xE2,  0x0F,  0x49,  0xAD,    //ldp         q2,q3,[sp,#0x120]
  /*0000000000000098:*/ 0xE4,  0x17,  0x4A,  0xAD,    //ldp         q4,q5,[sp,#0x140]
  /*000000000000009C:*/ 0xE6,  0x1F,  0x4B,  0xAD,    //ldp         q6,q7,[sp,#0x160]
  /*00000000000000A0:*/ 0xE1,  0x0B,  0x41,  0xA9,    //ldp         x1,x2,[sp,#0x10]
  /*00000000000000A4:*/ 0xE3,  0x13,  0x42,  0xA9,    //ldp         x3,x4,[sp,#0x20]
  /*00000000000000A8:*/ 0xE5,  0x1B,  0x43,  0xA9,    //ldp         x5,x6,[sp,#0x30]
  /*00000000000000AC:*/ 0xE7,  0x23,  0x44,  0xA9,    //ldp         x7,x8,[sp,#0x40]
  /*00000000000000B0:*/ 0xE9,  0x2B,  0x45,  0xA9,    //ldp         x9,x10,[sp,#0x50]
  /*00000000000000B4:*/ 0xEB,  0x33,  0x46,  0xA9,    //ldp         x11,x12,[sp,#0x60]
  /*00000000000000B8:*/ 0xED,  0x3B,  0x47,  0xA9,    //ldp         x13,x14,[sp,#0x70]
  /*00000000000000BC:*/ 0xEF,  0x43,  0x48,  0xA9,    //ldp         x15,xip0,[sp,#0x80]
  /*00000000000000C0:*/ 0xF1,  0x4B,  0x49,  0xA9,    //ldp         xip1,xpr,[sp,#0x90]
  /*00000000000000C4:*/ 0xF3,  0x53,  0x4A,  0xA9,    //ldp         x19,x20,[sp,#0xA0]
  /*00000000000000C8:*/ 0xF5,  0x5B,  0x4B,  0xA9,    //ldp         x21,x22,[sp,#0xB0]
  /*00000000000000CC:*/ 0xF7,  0x63,  0x4C,  0xA9,    //ldp         x23,x24,[sp,#0xC0]
  /*00000000000000D0:*/ 0xF9,  0x6B,  0x4D,  0xA9,    //ldp         x25,x26,[sp,#0xD0]
  /*00000000000000D4:*/ 0xFB,  0x73,  0x4E,  0xA9,    //ldp         x27,x28,[sp,#0xE0]
  /*00000000000000D8:*/ 0xFD,  0x7B,  0x4F,  0xA9,    //ldp         fp,lr,[sp,#0xF0]
  /*00000000000000DC:*/ 0xFF,  0x03,  0x08,  0x91,    //add         sp,sp,#0x200
  /*00000000000000E0:*/ 0x1F,  0x00,  0x00,  0xF1,    //cmp         x0,#0   //判断返回值
  /*00000000000000E4:*/ 0x00,  0x01,  0x00,  0x54,    //beq         get_notify_caller_ms_asm_exit
  /*00000000000000E8:*/ 0xF0,  0x03,  0x00,  0xAA,    //mov         xip0,x0
  /*00000000000000EC:*/ 0xE0,  0x03,  0x40,  0xF9,    //ldr         x0,[sp]
  /*00000000000000F0:*/ 0xFF,  0x43,  0x00,  0x91,    //add         sp,sp,#0x10
  /*00000000000000F4:*/ 0x00,  0x02,  0x1F,  0xD6,    //br          xip0
//get_notify_caller_ms_asm_pc:
  /*00000000000000F8:*/ 0xE0,  0x03,  0x1E,  0xAA,    //mov         x0,lr
  /*00000000000000FC:*/ 0x00,  0xB0,  0x01,  0xD1,    //sub         x0,x0,#0x6C
  /*0000000000000100:*/ 0xC0,  0x03,  0x5F,  0xD6,    //ret
//get_notify_caller_ms_asm_exit:
  /*0000000000000104:*/ 0xE0,  0x03,  0x40,  0xF9,    //ldr         x0,[sp]
  /*0000000000000108:*/ 0xFF,  0x43,  0x00,  0x91,    //add         sp,sp,#0x10
  /*000000000000010C:*/ 0xC0,  0x03,  0x5F,  0xD6,    //ret
//get_notify_caller_ms_asm_size:
  /*0000000000000110:*/ 0xC0,  0x03,  0x5F,  0xD6,    //ret
  /*0000000000000114:*/ 0x1F,  0x20,  0x03,  0xD5,    //nop
  /*0000000000000118:*/ 0xAA,  0xAA,  0xAA,  0xAA,    //orn         x10,x21,x10,asr #0x2A
  /*000000000000011C:*/ 0xBB,  0xBB,  0xBB,  0xBB,

};